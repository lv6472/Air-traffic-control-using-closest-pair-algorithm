def merge_sort(array, coordinate=0):
 
 length = len(array) if length == 1:
 return array if length == 2:
 if array[0][coordinate] > array[1][coordinate]:
 return np.array([array[1], array[0]])
 else:
 return array
 
 elif length > 2:
 array_l = array[:length//2]
 array_r = array[length//2:]
 array_l_sorted = merge_sort(array_l, coordinate)
 array_r_sorted = merge_sort(array_r, coordinate)
 
 l_length = len(array_l)
 r_length = len(array_r) l = 0
 r = 0
 
 sorted_list = []
 
 for i in range(length):
 if r == r_length:
 sorted_list.append(array_l_sorted[l])
 l += 1 elif l == l_length:
 sorted_list.append(array_r_sorted[r])
 r += 1 
 
 elif array_l_sorted[l][coordinate] > array_r_sorted[r][coordinate]:
 sorted_list.append(array_r_sorted[r])
 r += 1
 
 elif array_l_sorted[l][coordinate] < array_r_sorted[r][coordinate]:
 sorted_list.append(array_l_sorted[l])
 l += 1
 
 return np.array(sorted_list)
